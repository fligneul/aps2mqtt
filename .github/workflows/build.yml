name: 🏗️ Build

on:
  push:

jobs:
  build-pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.11", "3.x"]

    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: 👷🏻 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: 🕵🏻 Test with pytest
        run: pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml

      - name: 🚀 Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  build-pylint:
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: 👷🏻 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pylint pylint-exit

      - name: 🕵🏻 Analyse code with pylint
        run: |
          pylint --init-hook="import sys; import os; sys.path.append(os.path.abspath('.'));" $(git ls-files '*.py') || pylint-exit $?